package searchEngine;

import java.io.File;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.ArrayList;
import java.util.HashMap;


public class FileHandler {
	// File class variables
	private String nameFile;
	boolean fileExists;
	private int index;
	private int counter = 1;
	ArrayList<String> allFiles;
	HashMap<String,String> fileDetails;
	
	// Constructor for file class
	public FileHandler(String nameFile) {
		
		this.nameFile = nameFile;
	}
	
	public FileHandler() {
		fileDetails = new HashMap<String,String>();
		allFiles = new ArrayList<String>();
		allFiles.add("roles.txt");
		allFiles.add("random.txt");
		fileDetails.put("roles.txt", "roles.txt");
		fileDetails.put("random.txt", "random.txt");
		
	}


	//method for reading files
	public void readFile() {
		
		File files = new File(this.nameFile);
		try {
			Scanner fileRead = new Scanner(files);
			while(fileRead.hasNextLine()) {
				String line = fileRead.nextLine();
				System.out.println(line);
			}
			fileRead.close();

		}
		catch(Exception e) {
			System.out.println("The file may have not been found");
		}
	}
	
	//Method for checking if a word is in a file	
	public  String wordIsIn(String path, String text) {
		String defaultReturn = "\n"+counter+"The word "+text+" is not found in: "+ path;
		File files = new File(path);
		try {
			Scanner fileRead = new Scanner(files);
			while(fileRead.hasNextLine()) {
				String line = fileRead.nextLine();
				if(text.equals(line)) {
					
					return "\n\"+counter+\"Yes!! the word "+text+" is in the file: "+path;
					
				}
				
			}
			fileRead.close();
		}
		catch(Exception e) {
			System.out.println("The file may have not been found");

		}
		
		return defaultReturn;
	}
	
	public ArrayList<String> getAllFiles() {
	       return allFiles;
	   }
	
	public void addFile(String name) {
		allFiles.add(name);	
	}
	
	public void addFileDetails(String name, String url) {
		fileDetails.put(name, url);
	}
	public HashMap<String,String> getFileDetails(){
		return fileDetails;
	}
	public void removeFileDetail(String name) {
		fileDetails.remove(name);
	}	
	public void removeFile(String name) {
		for(int i=0; i < allFiles.size(); i++) {
			if (name.equals(allFiles.get(i))) {
				index = i;
			}
		}
		allFiles.remove(index);
	}


}
